@using StationeryManager.Services
@using StationeryManagerLib.Entities
@using StationeryManagerLib.RequestModel

<EditForm Model="Request" OnValidSubmit="OnSave">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<MudDialog>
		<DialogContent>
			@if (_loading)
			{
				<MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
			}

			<MudGrid Spacing="2">
				<MudItem xs="12" lg="12">
					<!-- Name Field -->
					<MudTextField @bind-Value="Request.Name"
								  Label="Tên tài khoản"
								  For="@(() => Request.Name)"
								  Required="true"
								  RequiredError="Tên tài khoản không được để trống" />

					<!-- Email Field -->
					<MudTextField @bind-Value="Request.Email"
								  Label="Email"
								  Required="true"
								  RequiredError="Email không được để trống"
								  For="@(() => Request.Email)" />

					<!-- Phone Field -->
					<MudTextField @bind-Value="Request.Phone"
								  Label="Số điện thoại"
								  For="@(() => Request.Phone)" />
				</MudItem>
			</MudGrid>
		</DialogContent>
		<DialogActions>
			<!-- Close Button -->
			<MudButton Color="Color.Default"
					   Variant="Variant.Outlined"
					   OnClick="CloseDialog"
					   StartIcon="@Icons.Material.Filled.Close"
					   Size="Size.Medium">
				Đóng
			</MudButton>
			<!-- Save Button -->
			<MudButton Color="Color.Primary"
					   Variant="Variant.Filled"
					   ButtonType="ButtonType.Submit"
					   StartIcon="@Icons.Material.Filled.PlaylistAddCheck"
					   Size="Size.Medium">
				<span>Cập nhật</span>
			</MudButton>
		</DialogActions>
	</MudDialog>
</EditForm>


@inject ISnackbar Snackbar
@inject IAccountServices AccountServices

@code {
	[CascadingParameter]
	public IMudDialogInstance MudDialog { get; set; } = null!;
	[Parameter]
	public AccountModel Account { get; set; } = new();

	private bool _loading = false;

	private UpdateAccountRequest Request { get; set; } = new();
	private bool _showPassword = false;

	protected override async Task OnInitializedAsync()
	{
		if (Account != null)
		{
			Request = new UpdateAccountRequest()
				{
					Name = Account.Name,
					Email = Account.Email,
					Phone = Account.Phone
				};
		}

		await base.OnInitializedAsync();
	}

	private void TogglePasswordVisibility()
	{
		_showPassword = !_showPassword;
	}

	private void CloseDialog() => MudDialog.Cancel();

	private async Task OnSave()
	{
		try
		{
			var result = await AccountServices.UpdateAccount(Account.Id.ToString(), Request);
			if (result)
			{
				Snackbar.Add("Cập nhật tài khoản thành công", Severity.Success);
			}
			else
			{
				Snackbar.Add("Cập nhật tài khoản thất bại", Severity.Error);
				_loading = false;
				return;
			}
			_loading = false;
			MudDialog.Close(DialogResult.Ok(true));
		}
		catch (Exception ex)
		{
			Snackbar.Add("Có lỗi xảy ra: " + ex.Message, Severity.Error);
			_loading = false;
			return;
		}

	}
}
