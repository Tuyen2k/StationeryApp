@using StationeryManagerLib.RequestModel

@{
	// @model CreateAccountRequest
	ViewData["Title"] = "Cập nhật tài khoản";
}

<h1>@ViewData["Title"]</h1>
<a asp-action="Index" class="btn btn-secondary">Danh sách tài khoản</a>

<div class="container">
	<form id="editForm" method="post">
		<div class="form-group">
			<label for="Name">Tên tài khoản</label>
			<input id="Name" name="Name" class="form-control" />
			<span id="errorName" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label for="Email">Email</label>
			<input id="Email" name="Email" class="form-control" />
			<span id="errorEmail" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label for="Phone">Số điện thoại</label>
			<input id="Phone" name="Phone" class="form-control" />
			<span id="errorPhone" class="text-danger"></span>
		</div>

		<div class="form-group">
			<button type="submit" class="btn btn-primary">Cập nhật</button>
		</div>
	</form>
</div>

@section Scripts {
	<script>
		const baseUrl = "https://localhost:7069"
		// lấy token trong localStore
		const token = localStorage.getItem("authToken");

		function getIdFromUrl() {
			const parts = window.location.pathname.split('/');
			return parts[parts.length - 1];
		}

		let id;

		function loadData() {
			id = getIdFromUrl();

			axios.get(`${baseUrl}/api/accounts/${id}`)
				.then(response => {
					console.log("detail: ", response);
					const acc = response.data;

					document.getElementById("Name").value = acc.name
					document.getElementById("Email").value = acc.email
					document.getElementById("Phone").value = acc.phone
				})
				.catch(error => {
					console.error("Lỗi khi lấy dữ liệu:", error);
					alert("Không thể tải dữ liệu tài khoản.");
				});
		}

		document.addEventListener("DOMContentLoaded", loadData);


		document.getElementById("editForm").addEventListener("submit", function (e) {
			e.preventDefault();

			const formData = {
				name: document.getElementById("Name").value,
				email: document.getElementById("Email").value,
				phone: document.getElementById("Phone").value
			};

			// Xóa lỗi cũ
			["Name", "Email", "Phone"].forEach(field => {
				document.getElementById("error" + field).innerText = "";
			});

			axios.patch(`${baseUrl}/api/accounts/${id}`, formData, {
				headers: {
						'Authorization': `Bearer ${token}`
					}
			})
				.then(response => {
					alert("Cập nhật tài khoản thành công!");
					window.location.href = "/Accounts/Index";
				})
				.catch(error => {
					if (error.response && error.response.status === 400) {
						// Hiển thị lỗi từ server nếu có
						const errors = error.response.data.errors;
						for (let key in errors) {
							const errorSpan = document.getElementById("error" + key);
							if (errorSpan) {
								errorSpan.innerText = errors[key];
							}
						}
					} else {
						alert("Đã xảy ra lỗi khi cập nhật tài khoản.");
						console.error(error);
					}
				});
		});
	</script>
}

