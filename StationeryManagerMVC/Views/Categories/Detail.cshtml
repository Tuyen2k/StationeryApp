@using StationeryManagerLib.Entities

@{
    // @model CategoryModel
	ViewData["Title"] = "Chi tiết danh mục phân loại";
}

@*
	hiển thị chi tiết tài khoản
*@

<div class="mt-3 d-flex gap-1">
    <a asp-action="Index" class="btn btn-secondary">Danh sách danh mục</a>
    <a id="editBtn" class="btn btn-primary">Cập nhật danh mục</a>
</div>

<div class="card mt-4">
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">ID</dt>
            <dd class="col-sm-9" id="Id"></dd>

            <dt class="col-sm-3">Tên danh mục phân loại</dt>
            <dd class="col-sm-9" id="Name"></dd>

            <dt class="col-sm-3">Mô tả</dt>
            <dd class="col-sm-9" id="Description"></dd>

            <dt class="col-sm-3">Lịch sử thao tác</dt>
            <dd class="col-sm-9" id="history"></dd>

            <dt class="col-sm-3">Người tạo</dt>
            <dd class="col-sm-9" id="CreatedAccount"></dd>

            <dt class="col-sm-3">Người sửa cuối cùng</dt>
            <dd class="col-sm-9" id="UpdatedAccount"></dd>
        </dl>
    </div>
</div>

@section Scripts {
    <script>
        const baseUrl = "https://localhost:7069";

        function getIdFromUrl() {
            const parts = window.location.pathname.split('/');
            return parts[parts.length - 1];
        }

        function formatDate(dateString) {
            const d = new Date(dateString);
            return d.toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' }) + ' ' +
                   d.toLocaleDateString('vi-VN');
        }

        function loadData() {
            const id = getIdFromUrl();

            axios.get(`${baseUrl}/api/categories/${id}`)
                .then(response => {
                    console.log("detail: ", response);
                    const model = response.data;

                    document.getElementById("Id").textContent = model.id;
                    document.getElementById("Name").textContent = model.name;
                    document.getElementById("Description").textContent = model.description;
                    document.getElementById("CreatedAccount").textContent = formtDataHistoryAction(model.createdByAccountEmail, model.createdAt);
                    document.getElementById("UpdatedAccount").textContent = formtDataHistoryAction(model.updatedByAccountEmail ,model.updatedAt);

                    document.getElementById("editBtn").href = `/Categories/Edit/${model.id}`;
                })
                .catch(error => {
                    console.error("Lỗi khi lấy dữ liệu:", error);
                    alert("Không thể tải dữ liệu tài khoản.");
                });
        }

        function formtDataHistoryAction(email, date){
            if(email !== null && email !== undefined){
                return email + " - " + formatDate(date);
            }
            return formatDate(date);
        }

        document.addEventListener("DOMContentLoaded", loadData);
    </script>
}


